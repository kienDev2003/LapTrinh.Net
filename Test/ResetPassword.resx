<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VPz/D1DnbGbS1KxrAAAAAElFTkSuQmCC
</value>
  </data>
</root>